services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - redis-cache
    volumes:
      - ./auth:/app
    env_file:
      - ./auth/.env
#    environment:
#      - DATABASE_URI=${DATABASE_URI}
#      - DATABASE_NAME=${DATABASE_NAME}
#      - PORT=${PORT}
#      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
#      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
#      - ACCESS_TOKEN_EXP_TIME=${ACCESS_TOKEN_EXP_TIME}
#      - REFRESH_TOKEN_EXP_TIME=${REFRESH_TOKEN_EXP_TIME}
#      - REDIS_ADDRESS=${REDIS_ADDRESS}
#      - REDIS_PASSWORD=${REDIS_PASSWORD}

  workout-exercise-data:
    build:
      context: ./workout-exercise-data
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis-cache
    volumes:
      - ./workout-exercise-data:/app
    env_file:
      - ./workout-exercise-data/.env

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: default_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db

  redis-cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis-cache:/data

  kafka:
    image: apache/kafka-native
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093,BROKER://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka

#  kafka-ui:
#    image: kafbat/kafka-ui:main
#    ports:
#      - "9090:8083"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: "true"
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#    depends_on:
#      - kafka

volumes:
  pgdata:
  mongodbdata:
  redis-cache:
  kafka-data:
